{
  "components": {
    "requestBodies": {
      "batchUpsertAlarms": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "_items": {
                  "description": "The list of alarms.",
                  "in": "body",
                  "items": {
                    "$ref": "#/components/schemas/alarmInsertItem"
                  },
                  "maxItems": 100,
                  "minItems": 1,
                  "name": "_items",
                  "type": "array"
                }
              },
              "required": [
                "_items"
              ],
              "type": "object"
            }
          }
        },
        "required": true
      }
    },
    "schemas": {
      "AlarmBatchDelete": {
        "description": "AlarmBatchDelete represents a form for batch deleting alarms.",
        "properties": {
          "_ids": {
            "description": "The list of alarm IDs.\n\nin: body",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "_ids"
        ],
        "type": "object"
      },
      "AlarmBatchInsert": {
        "description": "AlarmBatchInsert represents a form for batch inserting alarms.",
        "properties": {
          "_items": {
            "description": "The list of alarms.\n\nin: body",
            "items": {
              "$ref": "#/components/schemas/alarmInsertItem"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "_items"
        ],
        "type": "object"
      },
      "AlarmDeleteItem": {
        "description": "AlarmDeleteItem represents a form for deleting an alarm item.",
        "properties": {
          "id": {
            "description": "The ID of this alarm.\n\nin: path",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "AlarmGetItem": {
        "description": "AlarmGetItem represents a form for getting an alarm item.",
        "properties": {
          "id": {
            "description": "The alarm id.\nThe format of id: `urn:alm:{uid}:{created-local-milli-timestamp}`.",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "AlarmGetRange": {
        "description": "AlarmGetRange represents a form for getting a range of alarms.",
        "properties": {
          "Limit": {
            "description": "The maximum number of results to return. Default is 20.\n\nin: query",
            "format": "uint64",
            "maximum": 100,
            "minimum": 1,
            "type": "integer"
          },
          "Offset": {
            "description": "Offset the list of returned results by this amount. Default is zero.\n\nin: query",
            "format": "uint64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AlarmUpdateItem": {
        "description": "AlarmUpdateItem represents a form for updating an alarm item.",
        "properties": {
          "days": {
            "description": "The weekdays that will invoke the alarm. Value `1-\u003e7 (Sun-\u003eSat)`.\n\nin: body",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "maxItems": 7,
            "maximum": 7,
            "minItems": 0,
            "minimum": 1,
            "type": "array",
            "uniqueItems": true
          },
          "hour": {
            "description": "The hour of this alarm.\n\nin: body",
            "format": "int64",
            "maximum": 23,
            "minimum": 0,
            "type": "integer"
          },
          "id": {
            "description": "The ID of this alarm.\nThe format of id: `urn:alm:{uid}:{created-local-milli-timestamp}`.\n\nin: path",
            "type": "string"
          },
          "isActive": {
            "description": "The flag to determine whether this alarm is active or not.\n\nin: body",
            "type": "boolean"
          },
          "isRepeated": {
            "description": "The flag to determine whether this alarm should repeat or not.\n\nin: body",
            "type": "boolean"
          },
          "minute": {
            "description": "The minutes of this alarm.\n\nin: body",
            "format": "int64",
            "maximum": 59,
            "minimum": 0,
            "type": "integer"
          },
          "title": {
            "description": "The title of this alarm.\n\nin: body",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "BSONTimestamp": {
        "description": "BSONTimestamp represents an date by embeds a time.Time.",
        "type": "object"
      },
      "Date": {
        "description": "Date represents an instant in date by embeds a time.Time.\nDate use time.Time to store a date in UTC, so before get\nyear, month and day, Date.Time must be converted to UTC timezone.",
        "type": "object"
      },
      "Firmware": {
        "description": "Firmware defines data model for resource Firmware.\nmodm:\"Firmware\"",
        "properties": {
          "checksum": {
            "type": "string"
          },
          "createdAt": {
            "description": "The created time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "deviceModel": {
            "description": "Firmware fields.",
            "type": "string"
          },
          "downloadUrl": {
            "type": "string"
          },
          "firmwareBinary": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "isLatest": {
            "type": "boolean"
          },
          "maxAndroidVersion": {
            "type": "string"
          },
          "maxIOSVersion": {
            "type": "string"
          },
          "minAndroidVersion": {
            "type": "string"
          },
          "minIOSVersion": {
            "description": "Mobile app related fields.",
            "type": "string"
          },
          "updatedAt": {
            "description": "The updated time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "versionNumber": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PlatformType": {
        "description": "PlatformType represent a platform of asset",
        "type": "string"
      },
      "Time": {
        "description": "A Time represents an instant in time with nanosecond precision.",
        "type": "object"
      },
      "UnitGroup": {
        "description": "UnitGroup defines model for unit information",
        "properties": {
          "distance": {
            "$ref": "#/components/schemas/unit"
          },
          "height": {
            "$ref": "#/components/schemas/unit"
          },
          "weight": {
            "$ref": "#/components/schemas/unit"
          }
        },
        "type": "object"
      },
      "alarm": {
        "description": "Alarm represents an alarm entity.",
        "properties": {
          "createdAt": {
            "description": "The created time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "days": {
            "description": "The weekdays that will invoke the alarm. Value `1-\u003e7 (Sun-\u003eSat)`.",
            "example": [
              2,
              3,
              4
            ],
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "maxItems": 7,
            "maximum": 7,
            "minItems": 0,
            "minimum": 1,
            "type": "array",
            "uniqueItems": true
          },
          "hour": {
            "description": "The hour of this alarm.",
            "example": 6,
            "format": "int64",
            "maximum": 23,
            "minimum": 0,
            "type": "integer"
          },
          "id": {
            "description": "The id of this alarm.\nThe format of id: `urn:alm:{uid}:{created-local-milli-timestamp}`.",
            "example": "urn:alm:Wu8LGFBgDAuDzFA8:1522921872896",
            "type": "string"
          },
          "isActive": {
            "description": "The flag to determine whether this alarm is active or not.",
            "example": true,
            "type": "boolean"
          },
          "isRepeated": {
            "description": "The flag to determine whether this alarm should repeat or not.",
            "example": false,
            "type": "boolean"
          },
          "minute": {
            "description": "The minutes of this alarm.",
            "example": 30,
            "format": "int64",
            "maximum": 59,
            "minimum": 0,
            "type": "integer"
          },
          "title": {
            "description": "The title of this alarm.",
            "example": "The morning alarm.",
            "type": "string"
          },
          "uid": {
            "description": "The user's id.",
            "example": "Wu8LGFBgDAuDzFA8",
            "type": "string"
          },
          "updatedAt": {
            "description": "The updated time of this resource.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "alarmInsertItem": {
        "description": "AlarmInsertItem represents a form for inserting an alarm item.",
        "properties": {
          "days": {
            "description": "The weekdays that will invoke the alarm. Value `1-\u003e7 (Sun-\u003eSat)`.",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "maxItems": 7,
            "maximum": 7,
            "minItems": 0,
            "minimum": 1,
            "type": "array",
            "uniqueItems": true
          },
          "hour": {
            "description": "The hour of this alarm.\n\nin: body",
            "format": "int64",
            "maximum": 23,
            "minimum": 0,
            "type": "integer"
          },
          "id": {
            "description": "The ID of this alarm.\nThe format of id: `urn:alm:{uid}:{created-local-milli-timestamp}`.\n\nin: path",
            "type": "string"
          },
          "isActive": {
            "description": "The flag to determine whether this alarm is active or not.\n\nin: body",
            "type": "boolean"
          },
          "isRepeated": {
            "description": "The flag to determine whether this alarm should repeat or not.\n\nin: body",
            "type": "boolean"
          },
          "minute": {
            "description": "The minutes of this alarm.\n\nin: body",
            "format": "int64",
            "maximum": 59,
            "minimum": 0,
            "type": "integer"
          },
          "title": {
            "description": "The title of this alarm.\n\nin: body",
            "type": "string"
          }
        },
        "required": [
          "id",
          "title",
          "hour",
          "minute",
          "days",
          "isActive",
          "isRepeated"
        ],
        "type": "object"
      },
      "alarmResponse": {
        "description": "AlarmResponse represents a response item for alarm.",
        "properties": {
          "_etag": {
            "description": "The Entity tag. This the last modified time in milliseconds of this resource.",
            "example": 1525993410914,
            "format": "int64",
            "type": "integer"
          },
          "_isNew": {
            "description": "The flag to determine whether this resource is a new created or not. This field\nis usually used modification response.",
            "example": true,
            "type": "boolean"
          },
          "_links": {
            "$ref": "#/components/schemas/links"
          },
          "createdAt": {
            "description": "The created time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "days": {
            "description": "The weekdays that will invoke the alarm. Value `1-\u003e7 (Sun-\u003eSat)`.",
            "example": [
              2,
              3,
              4
            ],
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "maxItems": 7,
            "maximum": 7,
            "minItems": 0,
            "minimum": 1,
            "type": "array",
            "uniqueItems": true
          },
          "hour": {
            "description": "The hour of this alarm.",
            "example": 6,
            "format": "int64",
            "maximum": 23,
            "minimum": 0,
            "type": "integer"
          },
          "id": {
            "description": "The id of this alarm.\nThe format of id: `urn:alm:{uid}:{created-local-milli-timestamp}`.",
            "example": "urn:alm:Wu8LGFBgDAuDzFA8:1522921872896",
            "type": "string"
          },
          "isActive": {
            "description": "The flag to determine whether this alarm is active or not.",
            "example": true,
            "type": "boolean"
          },
          "isRepeated": {
            "description": "The flag to determine whether this alarm should repeat or not.",
            "example": false,
            "type": "boolean"
          },
          "minute": {
            "description": "The minutes of this alarm.",
            "example": 30,
            "format": "int64",
            "maximum": 59,
            "minimum": 0,
            "type": "integer"
          },
          "title": {
            "description": "The title of this alarm.",
            "example": "The morning alarm.",
            "type": "string"
          },
          "uid": {
            "description": "The user's id.",
            "example": "Wu8LGFBgDAuDzFA8",
            "type": "string"
          },
          "updatedAt": {
            "description": "The updated time of this resource.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "alarmSetting": {
        "description": "AlarmSettings represents an alarm settings entity.",
        "properties": {
          "createdAt": {
            "description": "The created time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "The id of this alarm settings.",
            "type": "string"
          },
          "isEnable": {
            "description": "The option to On/Off alarm.",
            "type": "boolean"
          },
          "uid": {
            "description": "The owner of this alarm settings.",
            "type": "string"
          },
          "updatedAt": {
            "description": "The updated time of this resource.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "alarmSettingsResponse": {
        "description": "AlarmSettingsResponse represents a response item for alarm settings.",
        "properties": {
          "_etag": {
            "description": "The Entity tag. This the last modified time in milliseconds of this resource.",
            "example": 1525993410914,
            "format": "int64",
            "type": "integer"
          },
          "_isNew": {
            "description": "The flag to determine whether this resource is a new created or not. This field\nis usually used modification response.",
            "example": true,
            "type": "boolean"
          },
          "_links": {
            "$ref": "#/components/schemas/links"
          },
          "createdAt": {
            "description": "The created time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "The id of this alarm settings.",
            "type": "string"
          },
          "isEnable": {
            "description": "The option to On/Off alarm.",
            "type": "boolean"
          },
          "uid": {
            "description": "The owner of this alarm settings.",
            "type": "string"
          },
          "updatedAt": {
            "description": "The updated time of this resource.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "appError": {
        "description": "AppError represents an error in application.",
        "properties": {
          "_error": {
            "description": "The internal error code.",
            "example": 500001,
            "format": "int64",
            "type": "integer"
          },
          "_errorDetails": {
            "description": "The details about this error.\nThis field may be a string, a number or any JSON types.\nThis field may be contains stacktrace and will be omitted in production.",
            "example": "The details of error.",
            "type": "object"
          },
          "_errorMessage": {
            "description": "The message of this error.",
            "example": "Oops, something went wrong",
            "type": "string"
          }
        },
        "type": "object"
      },
      "asset": {
        "description": "Asset defines data model for resource Asset",
        "properties": {
          "checksum": {
            "type": "string"
          },
          "createdAt": {
            "description": "The created time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "downloadUrl": {
            "type": "string"
          },
          "feature": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "platform": {
            "$ref": "#/components/schemas/PlatformType"
          },
          "resolution": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "updatedAt": {
            "description": "The updated time of this resource.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "assetResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/itemMeta"
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/itemMeta"
              }
            ],
            "properties": {
              "checksum": {
                "type": "string"
              },
              "createdAt": {
                "description": "The created time of this resource.",
                "format": "date-time",
                "type": "string"
              },
              "downloadUrl": {
                "type": "string"
              },
              "feature": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "platform": {
                "$ref": "#/components/schemas/PlatformType"
              },
              "resolution": {
                "type": "string"
              },
              "sku": {
                "type": "string"
              },
              "updatedAt": {
                "description": "The updated time of this resource.",
                "format": "date-time",
                "type": "string"
              }
            },
            "title": "AssetResponse represents a response item for Asset.",
            "type": "object"
          }
        ],
        "description": "AssetResponse represents a response item for Asset.",
        "properties": {
          "checksum": {
            "type": "string"
          },
          "createdAt": {
            "description": "The created time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "downloadUrl": {
            "type": "string"
          },
          "feature": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "platform": {
            "$ref": "#/components/schemas/PlatformType"
          },
          "resolution": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "updatedAt": {
            "description": "The updated time of this resource.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "authType": {
        "description": "AuthType defines type for auth.",
        "enum": [
          "email",
          "google",
          "facebook",
          "weibo",
          "wechat"
        ],
        "type": "string"
      },
      "firmwareResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/itemMeta"
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/itemMeta"
              }
            ],
            "properties": {
              "checksum": {
                "type": "string"
              },
              "createdAt": {
                "description": "The created time of this resource.",
                "format": "date-time",
                "type": "string"
              },
              "deviceModel": {
                "description": "Firmware fields.",
                "type": "string"
              },
              "downloadUrl": {
                "type": "string"
              },
              "firmwareBinary": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "isLatest": {
                "type": "boolean"
              },
              "maxAndroidVersion": {
                "type": "string"
              },
              "maxIOSVersion": {
                "type": "string"
              },
              "minAndroidVersion": {
                "type": "string"
              },
              "minIOSVersion": {
                "description": "Mobile app related fields.",
                "type": "string"
              },
              "updatedAt": {
                "description": "The updated time of this resource.",
                "format": "date-time",
                "type": "string"
              },
              "versionNumber": {
                "type": "string"
              }
            },
            "title": "FirmwareResponse represents a response item for Firmware.",
            "type": "object"
          }
        ],
        "description": "FirmwareResponse represents a response item for Firmware.",
        "properties": {
          "checksum": {
            "type": "string"
          },
          "createdAt": {
            "description": "The created time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "deviceModel": {
            "description": "Firmware fields.",
            "type": "string"
          },
          "downloadUrl": {
            "type": "string"
          },
          "firmwareBinary": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "isLatest": {
            "type": "boolean"
          },
          "maxAndroidVersion": {
            "type": "string"
          },
          "maxIOSVersion": {
            "type": "string"
          },
          "minAndroidVersion": {
            "type": "string"
          },
          "minIOSVersion": {
            "description": "Mobile app related fields.",
            "type": "string"
          },
          "updatedAt": {
            "description": "The updated time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "versionNumber": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "gender": {
        "description": "Gender type.",
        "enum": [
          "M",
          "F",
          "O",
          "NA"
        ],
        "type": "string"
      },
      "installation": {
        "description": "Installation defines data model for resource Installation.",
        "properties": {
          "appBuildNumber": {
            "description": "Build number of the that is currently installed.",
            "format": "int64",
            "minimum": 0,
            "type": "integer"
          },
          "appIdentifier": {
            "description": "The app identifier.",
            "example": "com.misfit.fossil",
            "type": "string"
          },
          "appMarketingVersion": {
            "description": "The user-facing release version of the app build.",
            "example": "2.5.0",
            "type": "string"
          },
          "appName": {
            "description": "The app name",
            "example": "Fossil Q",
            "type": "string"
          },
          "appPermissions": {
            "description": "List of App permissions.",
            "example": [
              "Bluetooth Permission",
              "Photos Permission"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "appVersion": {
            "description": "The version number the app identifies itself as. Could be the same as\neither the appBuildNumber or the appMarketingVersion.",
            "example": "2.5.0",
            "type": "string"
          },
          "badge": {
            "description": "Badge is used to store a number for the push notification bagde.\nCurrently not used by our app.",
            "example": 10,
            "format": "int64",
            "type": "integer"
          },
          "createdAt": {
            "description": "The created time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "deviceToken": {
            "description": "The device token used to send push notifications via GCM or APNS.",
            "example": "eSQXQZYLJH8:APA91bHkS7CCJizP6JzzZYY1ZFoe9LA0izAonuiDd...",
            "type": "string"
          },
          "deviceType": {
            "$ref": "#/components/schemas/mobilePlatform"
          },
          "id": {
            "description": "The ID of this installation.",
            "example": "7EAB8B98-5B77-446F-80DE-A6B063C24F9D:5af3e9eee4b053ff3b70b845",
            "type": "string"
          },
          "lastUpdatedAt": {
            "description": "The last timestamp of the last sync time with server.",
            "format": "date-time",
            "type": "string"
          },
          "localeIdentifier": {
            "description": "The locale identifier",
            "example": "vn-VN",
            "type": "string"
          },
          "model": {
            "description": "The model of phone.",
            "example": "iPhone 7 Plus",
            "type": "string"
          },
          "objectId": {
            "type": "string"
          },
          "osVersion": {
            "description": "The os version",
            "example": "10.2.1",
            "type": "string"
          },
          "timezone": {
            "description": "The timezone id",
            "example": "Asia/Ho_Chi_Minh",
            "type": "string"
          },
          "uid": {
            "description": "The User's id of this installation.",
            "example": "5af3e9eee4b053ff3b70b845",
            "type": "string"
          },
          "updatedAt": {
            "description": "The updated time of this resource.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "installationResponse": {
        "description": "InstallationResponse represents a response item for Installation.",
        "properties": {
          "_etag": {
            "description": "The Entity tag. This the last modified time in milliseconds of this resource.",
            "example": 1525993410914,
            "format": "int64",
            "type": "integer"
          },
          "_isNew": {
            "description": "The flag to determine whether this resource is a new created or not. This field\nis usually used modification response.",
            "example": true,
            "type": "boolean"
          },
          "_links": {
            "$ref": "#/components/schemas/links"
          },
          "appBuildNumber": {
            "description": "Build number of the that is currently installed.",
            "format": "int64",
            "minimum": 0,
            "type": "integer"
          },
          "appIdentifier": {
            "description": "The app identifier.",
            "example": "com.misfit.fossil",
            "type": "string"
          },
          "appMarketingVersion": {
            "description": "The user-facing release version of the app build.",
            "example": "2.5.0",
            "type": "string"
          },
          "appName": {
            "description": "The app name",
            "example": "Fossil Q",
            "type": "string"
          },
          "appPermissions": {
            "description": "List of App permissions.",
            "example": [
              "Bluetooth Permission",
              "Photos Permission"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "appVersion": {
            "description": "The version number the app identifies itself as. Could be the same as\neither the appBuildNumber or the appMarketingVersion.",
            "example": "2.5.0",
            "type": "string"
          },
          "badge": {
            "description": "Badge is used to store a number for the push notification bagde.\nCurrently not used by our app.",
            "example": 10,
            "format": "int64",
            "type": "integer"
          },
          "createdAt": {
            "description": "The created time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "deviceToken": {
            "description": "The device token used to send push notifications via GCM or APNS.",
            "example": "eSQXQZYLJH8:APA91bHkS7CCJizP6JzzZYY1ZFoe9LA0izAonuiDd...",
            "type": "string"
          },
          "deviceType": {
            "$ref": "#/components/schemas/mobilePlatform"
          },
          "id": {
            "description": "The ID of this installation.",
            "example": "7EAB8B98-5B77-446F-80DE-A6B063C24F9D:5af3e9eee4b053ff3b70b845",
            "type": "string"
          },
          "lastUpdatedAt": {
            "description": "The last timestamp of the last sync time with server.",
            "format": "date-time",
            "type": "string"
          },
          "localeIdentifier": {
            "description": "The locale identifier",
            "example": "vn-VN",
            "type": "string"
          },
          "model": {
            "description": "The model of phone.",
            "example": "iPhone 7 Plus",
            "type": "string"
          },
          "objectId": {
            "type": "string"
          },
          "osVersion": {
            "description": "The os version",
            "example": "10.2.1",
            "type": "string"
          },
          "timezone": {
            "description": "The timezone id",
            "example": "Asia/Ho_Chi_Minh",
            "type": "string"
          },
          "uid": {
            "description": "The User's id of this installation.",
            "example": "5af3e9eee4b053ff3b70b845",
            "type": "string"
          },
          "updatedAt": {
            "description": "The updated time of this resource.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "installationSettings": {
        "description": "InstallationSettings defines data model for resource InstallationSetting.",
        "properties": {
          "createdAt": {
            "description": "The created time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "isEnableNotification": {
            "description": "The option to enable notification.",
            "type": "boolean"
          },
          "updatedAt": {
            "description": "The updated time of this resource.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "installationSettingsResponse": {
        "description": "InstallationSettingsResponse represents a response item for InstallationSettings.",
        "properties": {
          "_etag": {
            "description": "The Entity tag. This the last modified time in milliseconds of this resource.",
            "example": 1525993410914,
            "format": "int64",
            "type": "integer"
          },
          "_isNew": {
            "description": "The flag to determine whether this resource is a new created or not. This field\nis usually used modification response.",
            "example": true,
            "type": "boolean"
          },
          "_links": {
            "$ref": "#/components/schemas/links"
          },
          "createdAt": {
            "description": "The created time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "isEnableNotification": {
            "description": "The option to enable notification.",
            "type": "boolean"
          },
          "updatedAt": {
            "description": "The updated time of this resource.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "integration": {
        "description": "Integration type.",
        "enum": [
          "jawbone",
          "underarmour",
          "healthkit",
          "googlefit"
        ],
        "type": "string"
      },
      "itemMeta": {
        "description": "ItemMeta defines item's meta data.",
        "properties": {
          "_etag": {
            "description": "The Entity tag. This the last modified time in milliseconds of this resource.",
            "example": 1525993410914,
            "format": "int64",
            "type": "integer"
          },
          "_isNew": {
            "description": "The flag to determine whether this resource is a new created or not. This field\nis usually used modification response.",
            "example": true,
            "type": "boolean"
          },
          "_links": {
            "$ref": "#/components/schemas/links"
          }
        },
        "type": "object"
      },
      "links": {
        "description": "Links defines \"_links\" format in rest response format.",
        "properties": {
          "child": {
            "type": "string"
          },
          "collection": {
            "type": "string"
          },
          "next": {
            "type": "string"
          },
          "parent": {
            "type": "string"
          },
          "prev": {
            "type": "string"
          },
          "self": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "mobilePlatform": {
        "description": "MobilePlatform is the the platform the phone is running.",
        "enum": [
          "android",
          "ios"
        ],
        "type": "string"
      },
      "modificationsMeta": {
        "description": "ModificationsMeta defines result of a batch modify action.",
        "properties": {
          "nFailed": {
            "format": "int64",
            "type": "integer"
          },
          "nInserted": {
            "format": "int64",
            "type": "integer"
          },
          "nRemoved": {
            "format": "int64",
            "type": "integer"
          },
          "nUpdated": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "modificationsResponse": {
        "description": "ModificationsResponse defines response format for modification multiple resources.",
        "properties": {
          "_etag": {
            "description": "The Entity tag. This the last modified time in milliseconds of resource.",
            "example": 1525993410914,
            "format": "int64",
            "type": "integer"
          },
          "_items": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "_result": {
            "$ref": "#/components/schemas/modificationsMeta"
          }
        },
        "type": "object"
      },
      "pageMeta": {
        "description": "PageMeta defines meta data in page response format.",
        "properties": {
          "hasNext": {
            "description": "The flag to determine whether the this query can fetch the next page or not.",
            "example": false,
            "type": "boolean"
          },
          "page": {
            "description": "The page will be return.",
            "example": 1,
            "format": "uint64",
            "type": "integer"
          },
          "size": {
            "description": "The maximum number of results to return per page.",
            "example": 20,
            "format": "uint64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "pageResponse": {
        "description": "PageResponse defines page response format.",
        "properties": {
          "_items": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "_links": {
            "$ref": "#/components/schemas/links"
          },
          "_range": {
            "$ref": "#/components/schemas/pageMeta"
          }
        },
        "type": "object"
      },
      "rangeMeta": {
        "description": "RangeMeta defines meta data in range response format.",
        "properties": {
          "hasNext": {
            "description": "The flag to determine whether the this query can fetch the next range or not.",
            "example": false,
            "type": "boolean"
          },
          "limit": {
            "description": "The maximum number of results to return.",
            "example": 20,
            "format": "uint64",
            "type": "integer"
          },
          "offset": {
            "description": "Offset the list of returned results.",
            "example": 100,
            "format": "uint64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "rangeResponse": {
        "description": "RangeResponse defines range response format.",
        "properties": {
          "_items": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "_links": {
            "$ref": "#/components/schemas/links"
          },
          "_range": {
            "$ref": "#/components/schemas/rangeMeta"
          }
        },
        "type": "object"
      },
      "unit": {
        "description": "Unit type.",
        "enum": [
          "metric",
          "imperial"
        ],
        "type": "string"
      },
      "user": {
        "description": "User defines data model for User.",
        "properties": {
          "activeDeviceId": {
            "description": "The default device which is connected in case user has multiple devices.\nIt is recorded as the serial number.",
            "example": "M0F1011009",
            "type": "string"
          },
          "birthday": {
            "format": "date",
            "type": "string"
          },
          "brand": {
            "description": "The brand name",
            "example": "Fossil",
            "type": "string"
          },
          "createdAt": {
            "description": "The created time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "diagnosticEnabled": {
            "description": "Allow send diagnostic info.",
            "type": "boolean"
          },
          "email": {
            "description": "The email to register.\nNormally, this is the email address which user registered.",
            "example": "user@fossil.com",
            "type": "string"
          },
          "emailOptIn": {
            "default": false,
            "description": "Allow user to follow brand's advertising.",
            "example": false,
            "type": "boolean"
          },
          "firstName": {
            "description": "Profile data.",
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/gender"
          },
          "heightInCentimeters": {
            "description": "Height in centimeters",
            "example": 170,
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "The id of user.",
            "example": "Wu8LGFBgDAuDzFA8",
            "type": "string"
          },
          "integrations": {
            "description": "Array of fitness partners user may have connected to our app.",
            "example": [
              "jawbone",
              "underarmour"
            ],
            "items": {
              "$ref": "#/components/schemas/integration"
            },
            "type": "array"
          },
          "isOnboardingComplete": {
            "description": "The flag to determise whether user completed registration by entering\nprofile information (name, birthday, height, weight...)",
            "example": true,
            "type": "boolean"
          },
          "lastName": {
            "type": "string"
          },
          "profilePicture": {
            "description": "User's profile picture.\nIts value must be a picture url.",
            "example": "https://profile-picture.url",
            "type": "string"
          },
          "registrationComplete": {
            "description": "The flag to determise whether user completed registration by entering\nprofile information (name, birthday, height, weight...)",
            "example": true,
            "type": "boolean"
          },
          "unitGroup": {
            "$ref": "#/components/schemas/UnitGroup"
          },
          "updatedAt": {
            "description": "The updated time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "username": {
            "description": "Username for login.\nNormally, this is the email address which user registered.",
            "example": "user@fossil.com",
            "type": "string"
          },
          "weightInGrams": {
            "description": "Weight in grams",
            "example": 68000,
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "userResponse": {
        "description": "UserResponse represents a response item for User.",
        "properties": {
          "_etag": {
            "description": "The Entity tag. This the last modified time in milliseconds of this resource.",
            "example": 1525993410914,
            "format": "int64",
            "type": "integer"
          },
          "_isNew": {
            "description": "The flag to determine whether this resource is a new created or not. This field\nis usually used modification response.",
            "example": true,
            "type": "boolean"
          },
          "_links": {
            "$ref": "#/components/schemas/links"
          },
          "activeDeviceId": {
            "description": "The default device which is connected in case user has multiple devices.\nIt is recorded as the serial number.",
            "example": "M0F1011009",
            "type": "string"
          },
          "birthday": {
            "format": "date",
            "type": "string"
          },
          "brand": {
            "description": "The brand name",
            "example": "Fossil",
            "type": "string"
          },
          "createdAt": {
            "description": "The created time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "diagnosticEnabled": {
            "description": "Allow send diagnostic info.",
            "type": "boolean"
          },
          "email": {
            "description": "The email to register.\nNormally, this is the email address which user registered.",
            "example": "user@fossil.com",
            "type": "string"
          },
          "emailOptIn": {
            "default": false,
            "description": "Allow user to follow brand's advertising.",
            "example": false,
            "type": "boolean"
          },
          "firstName": {
            "description": "Profile data.",
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/gender"
          },
          "heightInCentimeters": {
            "description": "Height in centimeters",
            "example": 170,
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "The id of user.",
            "example": "Wu8LGFBgDAuDzFA8",
            "type": "string"
          },
          "integrations": {
            "description": "Array of fitness partners user may have connected to our app.",
            "example": [
              "jawbone",
              "underarmour"
            ],
            "items": {
              "$ref": "#/components/schemas/integration"
            },
            "type": "array"
          },
          "isOnboardingComplete": {
            "description": "The flag to determise whether user completed registration by entering\nprofile information (name, birthday, height, weight...)",
            "example": true,
            "type": "boolean"
          },
          "lastName": {
            "type": "string"
          },
          "profilePicture": {
            "description": "User's profile picture.\nIts value must be a picture url.",
            "example": "https://profile-picture.url",
            "type": "string"
          },
          "registrationComplete": {
            "description": "The flag to determise whether user completed registration by entering\nprofile information (name, birthday, height, weight...)",
            "example": true,
            "type": "boolean"
          },
          "unitGroup": {
            "$ref": "#/components/schemas/UnitGroup"
          },
          "updatedAt": {
            "description": "The updated time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "username": {
            "description": "Username for login.\nNormally, this is the email address which user registered.",
            "example": "user@fossil.com",
            "type": "string"
          },
          "weightInGrams": {
            "description": "Weight in grams",
            "example": 68000,
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "userSettingResponse": {
        "description": "UserSettingResponse represents a response item for UserSetting.",
        "properties": {
          "_etag": {
            "description": "The Entity tag. This the last modified time in milliseconds of this resource.",
            "example": 1525993410914,
            "format": "int64",
            "type": "integer"
          },
          "_isNew": {
            "description": "The flag to determine whether this resource is a new created or not. This field\nis usually used modification response.",
            "example": true,
            "type": "boolean"
          },
          "_links": {
            "$ref": "#/components/schemas/links"
          },
          "acceptedPrivacies": {
            "description": "List of accepted privacies version.",
            "example": [
              "1.3",
              "1.4"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "acceptedTermsOfService": {
            "description": "List of accepted terms of service.",
            "example": [
              "theFirstTerm",
              "theSecondTerm"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "createdAt": {
            "description": "The created time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "The id of this user settings.",
            "example": "Wu8LGFBgDAuDzFA8",
            "type": "string"
          },
          "isLatestPrivacyAccepted": {
            "description": "The flag to determine whether user accepted the lasted Privacy.",
            "type": "boolean"
          },
          "isLatestTermsOfServiceAccepted": {
            "description": "The flag to determine whether user accepted the lasted Terms Of Service.",
            "type": "boolean"
          },
          "latestPrivacyVersion": {
            "description": "The latest version of privacy.",
            "type": "string"
          },
          "latestTermsOfServiceVersion": {
            "description": "The latest version of Terms of Service",
            "type": "string"
          },
          "uid": {
            "description": "The user's id.",
            "example": "Wu8LGFBgDAuDzFA8",
            "type": "string"
          },
          "updatedAt": {
            "description": "The updated time of this resource.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "userSettings": {
        "description": "UserSettings defines data model for resource UserSettings.",
        "properties": {
          "acceptedPrivacies": {
            "description": "List of accepted privacies version.",
            "example": [
              "1.3",
              "1.4"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "acceptedTermsOfService": {
            "description": "List of accepted terms of service.",
            "example": [
              "theFirstTerm",
              "theSecondTerm"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "createdAt": {
            "description": "The created time of this resource.",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "The id of this user settings.",
            "example": "Wu8LGFBgDAuDzFA8",
            "type": "string"
          },
          "isLatestPrivacyAccepted": {
            "description": "The flag to determine whether user accepted the lasted Privacy.",
            "type": "boolean"
          },
          "isLatestTermsOfServiceAccepted": {
            "description": "The flag to determine whether user accepted the lasted Terms Of Service.",
            "type": "boolean"
          },
          "latestPrivacyVersion": {
            "description": "The latest version of privacy.",
            "type": "string"
          },
          "latestTermsOfServiceVersion": {
            "description": "The latest version of Terms of Service",
            "type": "string"
          },
          "uid": {
            "description": "The user's id.",
            "example": "Wu8LGFBgDAuDzFA8",
            "type": "string"
          },
          "updatedAt": {
            "description": "The updated time of this resource.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "email": "sw-vn-backend@fossil.com",
      "name": "Fossil Backend Team"
    },
    "title": "Fossil API Documentation",
    "version": "v2"
  },
  "openapi": "3.0.0",
  "paths": {
    "/users/me": {
      "patch": {
        "operationId": "updateUserItem",
        "parameters": [
          {
            "description": "Locale",
            "in": "header",
            "name": "locale",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "birthday": {
                    "description": "Birthday",
                    "format": "date",
                    "in": "body",
                    "name": "birthday",
                    "schema": {
                      "$ref": "#/components/schemas/Date"
                    },
                    "type": "string"
                  },
                  "diagnosticEnabled": {
                    "description": "Is Diagnostic enable",
                    "in": "body",
                    "name": "diagnosticEnabled",
                    "type": "boolean"
                  },
                  "emailOptIn": {
                    "description": "The email OptIn",
                    "in": "body",
                    "name": "emailOptIn",
                    "type": "boolean"
                  },
                  "firstName": {
                    "description": "The first name",
                    "in": "body",
                    "name": "firstName",
                    "type": "string"
                  },
                  "gender": {
                    "$ref": "#/components/schemas/gender",
                    "description": "Gender (Male, Female, Other, N/A)",
                    "in": "body",
                    "name": "gender"
                  },
                  "heightInCentimeters": {
                    "description": "The height in centimeters",
                    "format": "int64",
                    "in": "body",
                    "minimum": 0,
                    "name": "heightInCentimeters",
                    "type": "integer"
                  },
                  "integrations": {
                    "description": "Integrations",
                    "enum": [
                      "jawbone",
                      "underarmour",
                      "healthkit",
                      "googlefit"
                    ],
                    "in": "body",
                    "items": {
                      "$ref": "#/components/schemas/integration"
                    },
                    "name": "integrations",
                    "type": "array"
                  },
                  "isOnboardingComplete": {
                    "description": "Is Onboarding Complete",
                    "in": "body",
                    "name": "isOnboardingComplete",
                    "type": "boolean"
                  },
                  "lastName": {
                    "description": "The last name",
                    "in": "body",
                    "name": "lastName",
                    "type": "string"
                  },
                  "profilePicture": {
                    "description": "Profile Picture",
                    "in": "body",
                    "name": "profilePicture",
                    "type": "string"
                  },
                  "unitGroup": {
                    "$ref": "#/components/schemas/UnitGroup",
                    "description": "The unit",
                    "enum": [
                      "metric",
                      "imperial"
                    ],
                    "in": "body",
                    "name": "unitGroup"
                  },
                  "weightInGrams": {
                    "description": "The weight in grams",
                    "format": "int64",
                    "in": "body",
                    "minimum": 0,
                    "name": "weightInGrams",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userResponse"
                }
              }
            },
            "description": "Update user success."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/appError"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Updating an user item.",
        "tags": [
          "users"
        ]
      }
    }
  },
  "servers": [
    {
      "description": "abc",
      "url": "https://abc.com"
    }
  ],
  "tags": []
}
